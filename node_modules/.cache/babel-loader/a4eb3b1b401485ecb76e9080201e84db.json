{"ast":null,"code":"var _jsxFileName = \"/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week4/github-user-searcher/src/UsersContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UsersContext = /*#__PURE__*/createContext();\n\nconst ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [inputvalue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [repos, setRepos] = useState([]);\n  const contextValue = {\n    isLoading,\n    setIsLoading,\n    users,\n    setUsers,\n    inputvalue,\n    setInputValue,\n    message,\n    setMessage,\n    repos,\n    setRepos,\n    getGitHubUserWithFetch: value => {\n      if (value !== \"\") {\n        setIsLoading(true);\n        fetch(`https://api.github.com/search/users?q=$value}`).then(res => res.json()).then(data => {\n          setIsLoading(false);\n\n          if (data.message) {\n            setMessage(data.message);\n          } else {\n            setUsers(data.items);\n          }\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UsersContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"UbRwXKw2olfp7OY9+CgJOR+AfpE=\");\n\n_c = ContextProvider;\nexport default ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/suvarnaakkala/Documents/GitHub/hyf-homework/react/week4/github-user-searcher/src/UsersContext.js"],"names":["React","createContext","useState","UsersContext","ContextProvider","children","isLoading","setIsLoading","users","setUsers","inputvalue","setInputValue","message","setMessage","repos","setRepos","contextValue","getGitHubUserWithFetch","value","fetch","then","res","json","data","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;;AAEP,MAAMG,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMc,YAAY,GAAG;AACnBV,IAAAA,SADmB;AAEnBC,IAAAA,YAFmB;AAGnBC,IAAAA,KAHmB;AAInBC,IAAAA,QAJmB;AAKnBC,IAAAA,UALmB;AAMnBC,IAAAA,aANmB;AAOnBC,IAAAA,OAPmB;AAQnBC,IAAAA,UARmB;AASnBC,IAAAA,KATmB;AAUnBC,IAAAA,QAVmB;AAWnBE,IAAAA,sBAAsB,EAAGC,KAAD,IAAW;AACjC,UAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBX,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACAY,QAAAA,KAAK,CAAE,+CAAF,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdhB,UAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,cAAIgB,IAAI,CAACX,OAAT,EAAkB;AAChBC,YAAAA,UAAU,CAACU,IAAI,CAACX,OAAN,CAAV;AACD,WAFD,MAEO;AACLH,YAAAA,QAAQ,CAACc,IAAI,CAACC,KAAN,CAAR;AACD;AACF,SATH;AAUD;AACF;AAzBkB,GAArB;AA4BA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAER,YAA9B;AAAA,cACGX;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;GAAMD,e;;KAAAA,e;AA0CN,eAAeA,eAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const UsersContext = createContext();\n\nconst ContextProvider = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [inputvalue, setInputValue] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [repos, setRepos] = useState([]);\n\n  const contextValue = {\n    isLoading,\n    setIsLoading,\n    users,\n    setUsers,\n    inputvalue,\n    setInputValue,\n    message,\n    setMessage,\n    repos,\n    setRepos,\n    getGitHubUserWithFetch: (value) => {\n      if (value !== \"\") {\n        setIsLoading(true);\n        fetch(`https://api.github.com/search/users?q=$value}`)\n          .then((res) => res.json())\n          .then((data) => {\n            setIsLoading(false);\n            if (data.message) {\n              setMessage(data.message);\n            } else {\n              setUsers(data.items);\n            }\n          });\n      }\n    },\n  };\n\n  return (\n    <UsersContext.Provider value={contextValue}>\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nexport default ContextProvider;\n"]},"metadata":{},"sourceType":"module"}